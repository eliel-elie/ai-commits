export default {
    cli: {
        intro: ' ai-commits ',
        provider: 'Provedor',
        notConfigured: 'n√£o configurado',
        stagingAll: 'Preparando todas as altera√ß√µes',
        detectingFiles: 'Detectando arquivos',
        noChanges: 'Nenhuma altera√ß√£o preparada encontrada. Prepare suas altera√ß√µes manualmente ou use --all',
        filesDetected: {
            one: 'Detectado {{count}} arquivo preparado:',
            other: 'Detectados {{count}} arquivos preparados:'
        },
        analyzing: 'A IA est√° analisando suas altera√ß√µes',
        changesAnalyzed: 'Altera√ß√µes analisadas',
        useMessage: 'Usar esta mensagem de commit?',
        commitCancelled: 'Commit cancelado',
        commitSuccess: '‚úî Commit realizado com sucesso!',
        errorGenerating: 'Erro: N√£o foi poss√≠vel gerar a mensagem de commit.'
    },
    config: {
        saved: '‚úî {{key}}={{value}} salvo com sucesso',
        error: 'Erro ao salvar configura√ß√£o:',
        notFound: '‚úñ {{key}} n√£o encontrado na configura√ß√£o. Use a flag apropriada para configur√°-lo.',
        invalidLocale: 'Idioma inv√°lido. Valores suportados: {{values}}',
        invalidProvider: 'Provider inv√°lido. Use: openai ou gemini',
        errorReadFile: 'Erro ao ler o arquivo de configura√ß√£o:'
    },
    dryRun: {
        title: 'üîç Modo Simula√ß√£o',
        divider: '==============',
        stagedFiles: 'üìã Arquivos Preparados:',
        commitMessage: 'üí¨ Mensagem de Commit:',
        diffPreview: 'üìä Preview das Altera√ß√µes:'
    },
    confirm: {
        yes: 'Sim',
        no: 'N√£o',
    }
};